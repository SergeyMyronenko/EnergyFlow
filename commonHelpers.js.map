{"version":3,"file":"commonHelpers.js","sources":["../src/img/dumbbell.png","../src/js/render.js","../src/js/favorites-list.js","../src/js/favorites-modal.js"],"sourcesContent":["export default \"__VITE_ASSET__bfce6746__\"","import icons from '../img/sprite.svg';\nimport dumb from '../img/dumbbell.png';\nimport {pagination, cardsPerPage} from './favorites-list'\nconst viewPortWidth = window.innerWidth;\nexport function renderFavorites(e) {\n  let storedData = JSON.parse(localStorage.getItem('favoriteData')) || [];\n  \n  if (viewPortWidth < 768) {\n  let cutStoredData = [];\n  let i = 1;\n    let currentPage = e.target.textContent;\n    let minNumOfCard = 0;\n     \n    if (!currentPage) {\n      currentPage = 1;\n    } else {\n      minNumOfCard = cardsPerPage * (currentPage - 1);\n  }\n\n    storedData.map(workoutCard => {\n      if (i > minNumOfCard && i <= Math.ceil(cardsPerPage * currentPage)) {\n        cutStoredData.push(workoutCard);\n      };\n      i += 1;\n    });\n    storedData = cutStoredData;\n  };\n\n\n  const favoritesContainer = document.querySelector('.favorites-contanier-block');\n  const mobilePagination = document.querySelector('.pagination-mobile-list');\n\n  favoritesContainer.innerHTML = '';\n\n  if (storedData.length === 0) {\n    favoritesContainer.innerHTML = `<img class=\"message-info-svg\" src=\"${dumb}\" alt=\"dumbbell\" />\n      <p class=\"message-info-text\">\n        It appears that you haven't added any exercises to your favorites yet.\n        To get started, you can add exercises that you like to your favorites\n        for easier access in the future.\n      </p>`;\n    favoritesContainer.style.overflowY = 'hidden';\n    mobilePagination.style.display = 'none';\n  }\n\n  const favoritesList = document.createElement('ul');\n  favoritesList.classList.add('favorites-list');\n  favoritesContainer.appendChild(favoritesList);\n\n  const favoritesHTML = storedData\n    .map(item => {\n      let exerciseName = item.name;\n      let exerciseTarget = item.target;\n      const viewPortWidth = window.innerWidth;\n      if (viewPortWidth >= 1440) {\n        if (exerciseName.length > 25) {\n          exerciseName = item.name[0].toUpperCase() + item.name.slice(1, 25).trim() + '...';\n        }\n        if (exerciseTarget.length > 20) {\n          exerciseTarget = item.target[0].toUpperCase() + item.target.slice(1, 17).trim() + '...';\n        }\n      } else if (viewPortWidth < 1440 && viewPortWidth >= 768) {\n        if (exerciseName.length > 17) {\n          exerciseName = item.name[0].toUpperCase() + item.name.slice(1, 16).trim() + '...';\n        }\n      } else {\n        exerciseName = item.name[0].toUpperCase() + item.name.slice(1, 20).trim() + '...';\n      }\n      return `<li class=\"favorites-list-item\" tabindex=\"0\">\n          <div class=\"favorites-card-heder\">\n            <div class=\"favorites-oval\">\n              <span>WORKOUT</span>\n              <button class=\"favorites-icon-svg\" data-id=\"${item._id}\">\n                <svg width=\"16\" height=\"16\" fill=\"none\">\n                  <use href=\"${icons}#trash\"></use>\n                </svg>\n              </button>\n            </div>\n            <button class=\"favorites-list-button\" data-id=\"${item._id}\" type=\"button\">\n              Start\n              <svg\n                class=\"favorites-list-button-icon\"\n                width=\"14\"\n                height=\"14\"\n                stroke=\"#1B1B1B\"\n              >\n                <use href=\"${icons}#arrow\"></use>\n              </svg>\n            </button>\n          </div>\n          <div class=\"favorites-list-container\">\n            <svg class=\"favorite-list-svg\" width=\"24\" height=\"24\">\n              <use href=\"${icons}#dude\"></use>\n            </svg>\n            <h3 class=\"favorites-list-text\">${exerciseName}</h3>\n          </div>\n          <div class=\"favorites-card-text\">\n            <ul class=\"favorites-card-text-list\">\n              <li class=\"favorites-card-text-item\">\n                <div class=\"favorites-card-text-wrapper\">\n                  <h4 class=\"favorites-card-text-title\">Burned calories:</h4>\n                  <p class=\"favorites-card-text-block\">${item.burnedCalories}</p>\n                </div>\n                <div class=\"favorites-card-text-wrapper\">\n                  <h4 class=\"favorites-card-text-title\">Body part:</h4>\n                  <p class=\"favorites-card-text-block\">${item.bodyPart}</p>\n                </div>\n                <div class=\"favorites-card-text-wrapper\">\n                  <h4 class=\"favorites-card-text-title\">Target:</h4>\n                  <p class=\"favorites-card-text-block\">${exerciseTarget}</p>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </li>`;\n    })\n    .join('');\n\n  favoritesList.innerHTML = favoritesHTML;\n  if (viewPortWidth < 768) {\n    pagination();\n  };\n}\n\ndocument.addEventListener('DOMContentLoaded', renderFavorites);\n","import { LOCAL_STORAGE_KEY } from './add-to-favorites';\nimport {renderFavorites} from './render'\n\n// let favoritesList;\n// let paginationButtons;\n\n// const itemsPerPage = 6;\n// if (window.location.pathname === '/favorites.html') {\n//   favoritesList = document.querySelector('.favorites-list');\n//   paginationButtons = document.querySelectorAll(\n//     '.favorites-pagination-block button'\n//   );\n//   showPage(1);\n  \n//   paginationButtons.forEach(button => {\n//     button.addEventListener('click', () => {\n//       const pageNumber = parseInt(button.textContent);\n//       showPage(pageNumber);\n//     });\n//   });\n// }\n\n// function showPage(pageNumber) {\n//   const startIndex = (pageNumber - 1) * itemsPerPage;\n//   const endIndex = startIndex + itemsPerPage;\n\n//   const items = favoritesList.querySelectorAll('.favorites-list-item');\n//   items.forEach((item, index) => {\n//     if (index >= startIndex && index < endIndex) {\n//       item.style.display = 'block';\n//     } else {\n//       item.style.display = 'none';\n//     }\n//   });\n\n//   paginationButtons.forEach(button => {\n//     if (parseInt(button.textContent) === pageNumber) {\n//       button.classList.add('active-btn');\n//     } else {\n//       button.classList.remove('active-btn');\n//     }\n//   });\n// };\n\n// const \n\n// пагінація\n// async function filterFetchPag(filterType, filterSubType, page) {\n//   const response = await axios.get('/filters', {\n//     params: keyGen(filterType, filterSubType, page),\n//   });\n\n//   try {\n//     if (response.data.results.length === 0) {\n//       throw new Error('No results found...');\n//     }\n//     filterType = response.data.results[0].filter;\n//     renderFilterImg(response);\n//   } catch (error) {\n//     renderMessage();\n//   }\n// };\nexport const cardsPerPage = 8;\nexport function pagination() {\n  const favoritesWorkout = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n  let paginationElements = '';\n  // if (error) {\n  //   paginationList.innerHTML = '';\n  //   return;\n  // }\n  const pagesQuantity = Math.ceil(favoritesWorkout.length / cardsPerPage);\n  paginationList.innerHTML = '';\n  if (pagesQuantity > 1) {\n    for (let i = 1; i <= pagesQuantity; i++) {\n      if (i === 1) {\n        paginationElements += `<li\n                class=\"exersizes-pagination-item exersizes-pagination-item-active\"\n              >\n\n          \n     <button class=\"exersizes-pagination-btn\"\n                  type=\"button\"\n                  name=\"pagination-button\"\n                  \n                >\n                  ${i}\n                </button>\n              </li>`;\n      } else {\n        paginationElements += `<li\n                class=\"exersizes-pagination-item\"\n              >\n\n          \n     <button class=\"exersizes-pagination-btn\"\n                  type=\"button\"\n                    name=\"pagination-button\"\n                  \n                >\n                  ${i}\n                </button>\n              </li>`;\n      }\n    }\n  }\n  paginationList.insertAdjacentHTML('beforeend', paginationElements);\n};\n\nfunction changingPaginationBtnStyle(e) {\n  const pageNumber = e.target.textContent.trim();\n  const previousActiveBtn = document.querySelector('.exersizes-pagination-item-active');\n  const currentActiveBtn = e.target.parentElement;\n  previousActiveBtn.classList.remove('exersizes-pagination-item-active');\n  currentActiveBtn.classList.add('exersizes-pagination-item-active');\n  currentActiveBtn.style.border = 'var(--primary-color) 1px solid';\n  currentActiveBtn.style.color = 'var(--primary-color)';\n  previousActiveBtn.style.border = 'none';\n  previousActiveBtn.style.color = 'rgba(27, 27, 27, 0.4)';\n};\n\nconst paginationList = document.querySelector('.favorites-pagination-block');\n\npaginationList.addEventListener(\"click\", (e) => {\n  if (e.target.classList.contains('exersizes-pagination-btn')) {\n    changingPaginationBtnStyle(e);\n    const favoritesContainer = document.querySelector('.favorites-contanier-block');\n  favoritesContainer.innerHTML = '';\n    renderFavorites(e);\n  }\n  \n});\n\n","import { getData, createMarkup } from './exercises-modal.js';\nimport './modals-functions.js';\nimport { updateRatingWidth } from './modals-functions.js';\n\nconst refs = {\n  exerciseModal: document.querySelector('.modal'),\n  exsCont: document.querySelector('.exs-container'),\n  body: document.querySelector('body'),\n};\n\ndocument.addEventListener('click', openExerciseModal);\n\nasync function openExerciseModal(e) {\n  try {\n    if (e.target.classList.contains('favorites-list-button')) {\n      const response = await getData(e.target.dataset.id);\n      refs.exsCont.innerHTML = createMarkup(response.data);\n      refs.exerciseModal.classList.toggle('is-open');\n      updateRatingWidth();\n      refs.body.classList.add('body-modal');\n    }\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n"],"names":["dumb","viewPortWidth","renderFavorites","e","storedData","cutStoredData","currentPage","minNumOfCard","cardsPerPage","workoutCard","favoritesContainer","mobilePagination","favoritesList","favoritesHTML","item","exerciseName","exerciseTarget","icons","pagination","favoritesWorkout","LOCAL_STORAGE_KEY","paginationElements","pagesQuantity","paginationList","i","changingPaginationBtnStyle","previousActiveBtn","currentActiveBtn","refs","openExerciseModal","response","getData","createMarkup","updateRatingWidth","error"],"mappings":"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"}