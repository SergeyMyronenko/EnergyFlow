{"version":3,"file":"add-to-favorites-53a5c8b0.js","sources":["../../src/js/quote.js","../../src/js/exercises-modal.js","../../src/js/add-to-favorites.js"],"sourcesContent":["import axios from 'axios';\n\nexport async function getQuote() {\n  // Проверяем, доступно ли localStorage и есть ли в нем данные, а также проверяем, совпадает ли timestamp\n  const quoteData =\n    localStorage && JSON.parse(localStorage.getItem('quoteData'));\n\n  const currentDay = new Date().getDate();\n\n  if (quoteData && quoteData.timestamp === currentDay) {\n    // Если условия выполняются, возвращаем quoteData\n    // console.log('Дані про цитату збережені в localStorage');\n    return quoteData;\n  }\n  // Если условия не выполняются, запрашиваем новую цитату\n  // console.log('Дані про цитату не збережені в localStorage');\n  return fetchNewQuote();\n}\n\nasync function fetchNewQuote() {\n  try {\n    // Відправляємо GET-запит на сервер для отримання нової цитати\n    const response = await axios.get(\n      'https://energyflow.b.goit.study/api/quote'\n    );\n    // Створюємо об'єкт з новими даними про цитату\n    const newQuoteData = {\n      quote: response.data.quote, // текст цитати\n      author: response.data.author, // автор цитати\n      timestamp: new Date().getDate(), // поточна дата\n    };\n    // Зберігаємо дані про цитату в локальне сховище\n    localStorage.setItem('quoteData', JSON.stringify(newQuoteData));\n    // Повертаємо нові дані про цитату\n    return newQuoteData;\n  } catch (error) {\n    // Виводимо помилку в консоль, якщо щось пішло не так\n    console.error('Помилка:', error);\n  }\n}\n\n// Асинхронна функція для відображення цитати\nasync function displayQuote(config) {\n  try {\n    // Отримуємо дані цитати\n    const quoteData = await getQuote();\n    // Знаходимо елемент для відображення тексту цитати\n    const quoteTextElement = document.querySelector(config.quoteTextSelector);\n    // Знаходимо елемент для відображення автора цитати\n    const quoteAuthorElement = document.querySelector(\n      config.quoteAuthorSelector\n    );\n\n    // Якщо не знайдено елементів для відображення тексту або автора цитати, викидаємо помилку\n    if (!quoteTextElement || !quoteAuthorElement) {\n      throw new Error('Елементи для відображення цитати не знайдено');\n    }\n\n    // Встановлюємо текст цитати\n    quoteTextElement.innerText = quoteData.quote;\n    // Встановлюємо автора цитати\n    quoteAuthorElement.innerText = quoteData.author;\n  } catch (error) {\n    // Виводимо помилку в консоль, якщо відбулася помилка при відображенні цитати\n    console.error('Сталася помилка при відображенні цитати:', error);\n  }\n}\n\n// Об'єкт конфігурації для цитат на сторінці\nconst pageQuoteConfig = {\n  quoteTextSelector: '.quote-text', // Селектор для тексту цитати\n  quoteAuthorSelector: '.quote-author', // Селектор для автора цитати\n};\n\n// Перевіряємо, чи є на сторінці елементи для тексту та автора цитати\nif (\n  document.querySelector(pageQuoteConfig.quoteTextSelector) &&\n  document.querySelector(pageQuoteConfig.quoteAuthorSelector)\n) {\n  // Якщо елементи є, відображаємо цитату\n  displayQuote(pageQuoteConfig);\n}\n\n// Експортуємо функцію displayQuote\nexport { displayQuote };\n","import axios from 'axios';\n\nexport function getData(id) {\n  return axios.get(`https://energyflow.b.goit.study/api/exercises/${id}`);\n}\n\nexport function createMarkup(obj) {\n  return `\n      <div class=\"modal-content\">\n        <img class=\"modal-img\" src=\"${obj.gifUrl}\" alt=\"\">\n\n        <div class=\"modal-info\">\n          <h4 class=\"modal-title\">${obj.name}</h4>\n\n          <div class=\"modal-rating\">\n            <p class=\"modal-rating-value\">${obj.rating}</p>\n\n       <div class=\"ex-rating\">\n                <div class=\"ex-rating-body\">\n                  <div class=\"ex-rating-active\"></div>\n                  <div class=\"ex-rating-items\">\n                    <input\n                      type=\"radio\"\n                      class=\"ex-rating-item\"\n                      value=\"1\"\n                      name=\"exrating\"\n                    /><input\n                      type=\"radio\"\n                      class=\"ex-rating-item\"\n                      value=\"2\"\n                      name=\"exrating\"\n                    /><input\n                      type=\"radio\"\n                      class=\"ex-rating-item\"\n                      value=\"3\"\n                      name=\"exrating\"\n                    /><input\n                      type=\"radio\"\n                      class=\"ex-rating-item\"\n                      value=\"4\"\n                      name=\"exrating\"\n                    /><input type=\"radio\" class=\"ex-rating-item\" value=\"5\" name=\"exrating\" />\n                  </div>\n                </div>\n              </div>\n          </div>\n\n          <ul class=\"modal-list\">\n            <li class=\"modal-list-item\">\n              <p class=\"modal-list-item-name\">Target</p>\n              <p class=\"modal-list-item-value\">${obj.target}</p>\n            </li>\n            <li class=\"modal-list-item\">\n              <p class=\"modal-list-item-name\">Body Part</p>\n              <p class=\"modal-list-item-value\">${obj.bodyPart}</p>\n            </li>\n            <li class=\"modal-list-item\">\n              <p class=\"modal-list-item-name\">Equipment</p>\n              <p class=\"modal-list-item-value\">${obj.equipment}</p>\n            </li>\n            <li class=\"modal-list-item\">\n              <p class=\"modal-list-item-name\">Popular</p>\n              <p class=\"modal-list-item-value\">${obj.popularity}</p>\n            </li>\n            <li class=\"modal-list-item\">\n              <p class=\"modal-list-item-name\">Burned calories</p>\n              <p class=\"modal-list-item-value\">${obj.burnedCalories}/3 min</p>\n            </li>\n          </ul>\n\n          <p class=\"modal-description\">${obj.description}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-buttons\">\n        <button class=\"modal-button-favorites\" type=\"button\" data-id=\"${obj._id}\">\n          Add to favorites\n          <svg\n            class=\"modal-button-favorites-icon\"\n            width=\"20\"\n            height=\"20\"\n            aria-label=\"heart-icon\"\n          >\n            <use href=\"./img/sprite.svg#heart\"></use>\n          </svg>\n        </button>\n\n        <button class=\"modal-button-rating\">Give a rating</button>\n      </div>\n  `;\n}\n","import { getData } from './exercises-modal.js';\nconst addToFavoritesBtn = document.querySelector('.modal-button-favorites');\nconst modalWindow = document.querySelector('.modal');\ndocument.addEventListener('click', addToFavorites);\n\nexport let FAVORITES_ID = 'favoriteData';\nconst inLocalStorage = JSON.parse(localStorage.getItem(FAVORITES_ID)) || [];\n\nasync function addToFavorites(e) {\n  try {\n    // const itemId = await getData(e.target.dataset.id);\n    if (e.target.classList.contains('modal-button-favorites')) {\n      const itemId = await getData(e.target.dataset.id);\n      const data = itemId.data;\n      const findCopy = inLocalStorage.some(item => item._id === data._id);\n\n      if (!findCopy) {\n        inLocalStorage.push(data);\n      } else {\n        return;\n      }\n      localStorage.setItem(FAVORITES_ID, JSON.stringify(inLocalStorage));\n      modalWindow.classList.remove('is-open');\n    }\n  } catch (error) {\n    console.log(error.message);\n  } finally {\n    addToFavoritesBtn.removeEventListener('click', addToFavorites);\n  }\n}\n"],"names":["getQuote","quoteData","currentDay","fetchNewQuote","response","axios","newQuoteData","error","displayQuote","config","quoteTextElement","quoteAuthorElement","pageQuoteConfig","getData","id","createMarkup","obj","addToFavoritesBtn","modalWindow","addToFavorites","FAVORITES_ID","inLocalStorage","e","data","item"],"mappings":"+uBAEO,eAAeA,GAAW,CAE/B,MAAMC,EACJ,cAAgB,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,EAExDC,EAAa,IAAI,KAAM,EAAC,QAAO,EAErC,OAAID,GAAaA,EAAU,YAAcC,EAGhCD,EAIFE,EAAa,CACtB,CAEA,eAAeA,GAAgB,CAC7B,GAAI,CAEF,MAAMC,EAAW,MAAMC,EAAM,IAC3B,2CACN,EAEUC,EAAe,CACnB,MAAOF,EAAS,KAAK,MACrB,OAAQA,EAAS,KAAK,OACtB,UAAW,IAAI,KAAM,EAAC,QAAS,CACrC,EAEI,oBAAa,QAAQ,YAAa,KAAK,UAAUE,CAAY,CAAC,EAEvDA,CACR,OAAQC,EAAO,CAEd,QAAQ,MAAM,WAAYA,CAAK,CAChC,CACH,CAGA,eAAeC,EAAaC,EAAQ,CAClC,GAAI,CAEF,MAAMR,EAAY,MAAMD,IAElBU,EAAmB,SAAS,cAAcD,EAAO,iBAAiB,EAElEE,EAAqB,SAAS,cAClCF,EAAO,mBACb,EAGI,GAAI,CAACC,GAAoB,CAACC,EACxB,MAAM,IAAI,MAAM,8CAA8C,EAIhED,EAAiB,UAAYT,EAAU,MAEvCU,EAAmB,UAAYV,EAAU,MAC1C,OAAQM,EAAO,CAEd,QAAQ,MAAM,2CAA4CA,CAAK,CAChE,CACH,CAGA,MAAMK,EAAkB,CACtB,kBAAmB,cACnB,oBAAqB,eACvB,EAIE,SAAS,cAAcA,EAAgB,iBAAiB,GACxD,SAAS,cAAcA,EAAgB,mBAAmB,GAG1DJ,EAAaI,CAAe,EC9EvB,SAASC,EAAQC,EAAI,CAC1B,OAAOT,EAAM,IAAI,iDAAiDS,CAAE,EAAE,CACxE,CAEO,SAASC,EAAaC,EAAK,CAChC,MAAO;AAAA;AAAA,sCAE6BA,EAAI,MAAM;AAAA;AAAA;AAAA,oCAGZA,EAAI,IAAI;AAAA;AAAA;AAAA,4CAGAA,EAAI,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAmCLA,EAAI,MAAM;AAAA;AAAA;AAAA;AAAA,iDAIVA,EAAI,QAAQ;AAAA;AAAA;AAAA;AAAA,iDAIZA,EAAI,SAAS;AAAA;AAAA;AAAA;AAAA,iDAIbA,EAAI,UAAU;AAAA;AAAA;AAAA;AAAA,iDAIdA,EAAI,cAAc;AAAA;AAAA;AAAA;AAAA,yCAI1BA,EAAI,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAMgBA,EAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAe/E,CC1FA,MAAMC,EAAoB,SAAS,cAAc,yBAAyB,EACpEC,EAAc,SAAS,cAAc,QAAQ,EACnD,SAAS,iBAAiB,QAASC,CAAc,EAE1C,IAAIC,EAAe,eAC1B,MAAMC,EAAiB,KAAK,MAAM,aAAa,QAAQD,CAAY,CAAC,GAAK,GAEzE,eAAeD,EAAeG,EAAG,CAC/B,GAAI,CAEF,GAAIA,EAAE,OAAO,UAAU,SAAS,wBAAwB,EAAG,CAEzD,MAAMC,GADS,MAAMV,EAAQS,EAAE,OAAO,QAAQ,EAAE,GAC5B,KAGpB,GAAI,CAFaD,EAAe,KAAKG,GAAQA,EAAK,MAAQD,EAAK,GAAG,EAGhEF,EAAe,KAAKE,CAAI,MAExB,QAEF,aAAa,QAAQH,EAAc,KAAK,UAAUC,CAAc,CAAC,EACjEH,EAAY,UAAU,OAAO,SAAS,CACvC,CACF,OAAQX,EAAO,CACd,QAAQ,IAAIA,EAAM,OAAO,CAC7B,QAAY,CACRU,EAAkB,oBAAoB,QAASE,CAAc,CAC9D,CACH"}